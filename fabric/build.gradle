import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
    id 'net.darkhax.curseforgegradle'
    id 'com.modrinth.minotaur'
}

if (project.hasProperty('modmenu_version')) {
    repositories { RepositoryHandler handler ->
        {
            limitedMaven(handler, 'https://maven.terraformersmc.com/', 'com.terraformersmc')
        }
    }

    dependencies {
        modRuntimeOnly("com.terraformersmc:modmenu:${project.findProperty('modmenu_version')}")
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    if (project.hasProperty('jei_version')) {
        modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
        modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
        modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")
        modRuntimeOnly group: 'net.darkhax.simplelootviewer', name: "simplelootviewer-fabric-${minecraft_version}", version: simple_loot_viewer_version
    }

    modImplementation group: 'net.darkhax.botanypots', name: 'botanypots-fabric-1.21.1', version: botanypots_version
    modImplementation group: 'net.darkhax.bookshelf', name: 'bookshelf-fabric-1.21.1', version: bookshelf_version
    modImplementation group: 'net.darkhax.pricklemc', name: 'prickle-fabric-1.21.1', version: prickle_version
}

loom {
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}

// CurseForge
tasks.register('publishCurseForge', TaskPublishCurseForge) {
    apiToken = providers.environmentVariable('CURSEFORGE_TOKEN')

    var mainFile = upload(curse_project, tasks.remapJar)
    mainFile.changelogType = 'html'
    mainFile.changelog = currentChangelog
    mainFile.addModLoader('Fabric')
    mainFile.releaseType = 'release'

    mainFile.addRequirement('botany-pots')
    mainFile.addRequirement('bookshelf')
    mainFile.addRequirement('prickle')
}

// Modrinth
modrinth {
    token.set(providers.environmentVariable('MODRINTH_TOKEN'))
    projectId.set(modrinth_project)
    changelog = currentChangelog
    versionName.set("${mod_name}-${minecraft_version}-$version")
    versionType.set("release")
    loaders = ["fabric"]
    gameVersions = ["${minecraft_version}"]
    uploadFile.set(tasks.remapJar)
    dependencies {
        required.project("fabric-api")
        required.project("botany-pots")
        required.project("bookshelf-lib")
        required.project("prickle")
    }
}

void limitedMaven(RepositoryHandler handler, String url, String... groups) {
    handler.exclusiveContent {
        it.forRepositories(handler.maven {
            setUrl(url)
        })
        it.filter { f ->
            for (def group : groups) {
                f.includeGroup(group)
            }
        }
    }
}